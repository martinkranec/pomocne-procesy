<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://petriflow.com/petriflow.schema.xsd">
	<id>remove_uri_node</id>
	<initials>RUN</initials>
	<title>remove_uri_node</title>
	<defaultRole>false</defaultRole>
	<anonymousRole>false</anonymousRole>
	<transitionRole>false</transitionRole>
	<roleRef>
		<id>admin</id>
		<caseLogic>
			<create>true</create>
			<delete>true</delete>
		</caseLogic>
	</roleRef>
	<role>
		<id>admin</id>
		<title>Admin</title>
	</role>
	<data type="button">
		<id>run_fix</id>
		<title/>
		<placeholder>Find</placeholder>
		<action trigger="set">
			title: f.title,
			result: f.result;

			def uriNodeService = com.netgrif.application.engine.configuration.ApplicationContextProvider.getBean("uriService")

			def node = uriNodeService.findByUri(title.value)
			def nets = petriNetService.findAllByUri(title.value)
			def parent = uriNodeService.findById(node.parentId)
			def newChildren = parent.childrenId.findAll { it != node.id }

			def request = new com.netgrif.application.engine.elastic.web.requestbodies.CaseSearchRequest()
			request.query = "uriNodeId:\"$node.id\"" as String
			def count = elasticCaseService.count([request], userService.system.transformToLoggedUser(), org.springframework.context.i18n.LocaleContextHolder.locale, false)

			change result value { "$node.name $nets.identifier $count, parent children are $newChildren" as String }
		</action>
	</data>

	<data type="button">
		<id>run_fix_2</id>
		<title/>
		<placeholder>Delete</placeholder>
		<action trigger="set">
			title: f.title,
			result: f.result;

			def uriNodeService = com.netgrif.application.engine.configuration.ApplicationContextProvider.getBean("uriService")
			def repo = com.netgrif.application.engine.configuration.ApplicationContextProvider.getBean("uriNodeRepository")

			def node = uriNodeService.findByUri(title.value)
			def parent = uriNodeService.findById(node.parentId)

			parent.childrenId = parent.childrenId.findAll { it != node.id }
			uriNodeService.save(parent)
			repo.delete(node)

			change result value { "deleted $node.name, parent children are $parent.childrenId" as String }
		</action>
	</data>

	<data type="text">
		<id>result</id>
		<title>Result</title>
	</data>

	<data type="text">
		<id>title</id>
		<title>Title</title>
	</data>

	<transition>
		<id>t1</id>
		<x>540</x>
		<y>180</y>
		<label>Fix</label>
		<roleRef>
			<id>admin</id>
			<logic>
				<view>true</view>
				<cancel>true</cancel>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>t1_0</id>
			<cols>4</cols>
			<layout>grid</layout>
			<dataRef>
				<id>title</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>run_fix</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>run_fix_2</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>2</x>
					<y>1</y>
					<rows>1</rows>
					<cols>2</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>result</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>2</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>t1_assign</id>
		</event>
		<event type="finish">
			<id>t1_finish</id>
		</event>
		<event type="cancel">
			<id>t1_cancel</id>
		</event>
		<event type="delegate">
			<id>t1_delegate</id>
		</event>
	</transition>
</document>