<document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://petriflow.com/petriflow.schema.xsd">
	<id>migrate_finish_mail_fpu</id>
	<initials>MFP</initials>
	<title>migrate_finish_mail_fpu</title>
	<icon>device_hub</icon>
	<defaultRole>false</defaultRole>
	<anonymousRole>false</anonymousRole>
	<transitionRole>false</transitionRole>
	<caseName>migrate_finish_mail_fpu</caseName>
	<processEvents>
		<event type="upload">
			<id>upload</id>
			<actions phase="post">
				<action>
					createCase("migrate_finish_mail_fpu")
				</action>
			</actions>
		</event>
	</processEvents>
	<roleRef>
		<id>admin</id>
		<caseLogic>
			<create>true</create>
			<delete>true</delete>
		</caseLogic>
	</roleRef>
	<role>
		<id>admin</id>
		<title>Admin</title>
	</role>
	<data type="text">
		<id>info</id>
		<title>Info</title>
		<component>
			<name>htmltextarea</name>
		</component>
	</data>
	<data type="button">
		<id>run_all</id>
		<title>Run for all</title>
		<event type="set">
			<id>set_run_all</id>
			<actions phase="post">
				<action>
					info: f.info;
					change info value { "" }
					def threshold = java.time.LocalDate.of(2023, 11, 9).atStartOfDay()
					def cases = findCasesElastic("processIdentifier:\"FPU_a_OCR/fpu_faktura\" AND taskIds:t45")
					def processed = []
					cases.each { c ->
						if (c.creationDate.isAfter(threshold)) {
							change info value { info.value + "\n&lt;br> " + c.stringId + " " + c.title }
							processed.add(it)
							try {
								finishTask("t45", c, userService.system)
							} catch (Exception e) {
								change info value { info.value + "\n&lt;br> " + c.stringId + " failed $e.message" as String }
							}
							workflowService.save(useCase)
						}
					}
					change info value { info.value + "\n&lt;br> " + processed.size() }
				</action>
			</actions>
		</event>
	</data>
	<transition>
		<id>t1</id>
		<x>700</x>
		<y>260</y>
		<label>Migration FPU MAIL</label>
		<roleRef>
			<id>admin</id>
			<logic>
				<cancel>true</cancel>
				<perform>true</perform>
			</logic>
		</roleRef>
		<dataGroup>
			<id>t1_0</id>
			<cols>4</cols>
			<layout>grid</layout>
			<dataRef>
				<id>run_all</id>
				<logic>
					<behavior>editable</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>0</y>
					<rows>1</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
			<dataRef>
				<id>info</id>
				<logic>
					<behavior>visible</behavior>
				</logic>
				<layout>
					<x>0</x>
					<y>1</y>
					<rows>2</rows>
					<cols>4</cols>
					<template>material</template>
					<appearance>outline</appearance>
				</layout>
			</dataRef>
		</dataGroup>
		<event type="assign">
			<id>t1_assign</id>
		</event>
		<event type="finish">
			<id>t1_finish</id>
			<title></title>
		</event>
		<event type="cancel">
			<id>t1_cancel</id>
		</event>
		<event type="delegate">
			<id>t1_delegate</id>
		</event>
	</transition>
	<place>
		<id>p1</id>
		<x>540</x>
		<y>260</y>
		<tokens>1</tokens>
		<static>false</static>
	</place>
	<arc>
		<id>a1</id>
		<type>regular</type>
		<sourceId>p1</sourceId>
		<destinationId>t1</destinationId>
		<multiplicity>1</multiplicity>
	</arc>
</document>